TEST FOR MODULE 100-matrix_mul
==============================

Import module:
	>>> mod = __import__('100-matrix_mul')

Import function:
	>>> matrix_mul = mod.matrix_mul

Check model doc:
	>>> len(mod.__doc__) > 1
	True

Check function doc:
	>>> len(matrix_mul.__doc__) > 1
	True

Check list:
	>>> list = []
	>>> matrix_mul("str", list)
	Traceback (most recent call last):
	...
	TypeError: m_a must be a list
	>>> matrix_mul(list, "str")
	Traceback (most recent call last):
	...
	TypeError: m_b must be a list
	>>> matrix_mul("str", "str")
        Traceback (most recent call last):
	...
        TypeError: m_a must be a list

Check list of lists:
	>>> list = [[]]
	>>> list2 = [[]]
	>>> matrix_mul(list, list2)
	Traceback (most recent call last):
	...
	ValueError: m_a can't be empty
	>>> matrix_mul(list2, list)
	Traceback (most recent call last):
	...
	ValueError: m_a can't be empty
	>>> list = [[1, 2, 3]]
	>>> matrix_mul(list, list2)
	Traceback (most recent call last):
	...
	ValueError: m_b can't be empty

Check normal_list:
	>>> list = [[1, 2, 3], [4, 5, 6]]
	>>> list2 =[[1, 2, 3], [4, 5, 6], [1, 2, 3]]
	>>> print(matrix_mul(list, list2))
	[[12, 18, 24], [30, 45, 60]]

Check normal_list:
	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
	[[7, 10], [15, 22]]

Check list containt:
	>>> print(matrix_mul([["str", 2], [3, 4]], [[1, 2], [3, 4]]))
	Traceback (most recent call last):
	...
	TypeError: m_a should contain only integers or floats

Check Rectangle:
	>>> print(matrix_mul([[2, 2], [3, 4], [5, 6, 7]], [[1, 2], [3, 4]]))
	Traceback (most recent call last):
	...
	TypeError: each row of m_a must be of the same size
	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [1, 2, 3]]))
	Traceback (most recent call last):
		...
	TypeError: each row of m_b must be of the same size

Check matrix size:
	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [1, 2]]))
	Traceback (most recent call last):
	...
	ValueError: m_a and m_b can't be multiplied

	
